user root;  
worker_processes  4;
worker_rlimit_nofile 8132;

events {
	#
    # Determines how many clients will be served by each worker process.
    # (Max clients = worker_connections * worker_processes)
    # Should be equal to `ulimit -n / worker_processes`
    #
    worker_connections  8132; #8132
	
	#
    # Let each process accept multiple connections.
    # Accept as many connections as possible, after nginx gets notification
    # about a new connection.
    # May flood worker_connections, if that option is set too low.
    #
	# multi_accept        on;

	#
    # Preferred connection method for newer linux versions.
    # Essential for linux, optimized to serve many clients with each thread.
    #
    use                 epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

	#rate limiting: global is identifier and o2omeet_upstream_zone is the zone. 100 request per second with 100 request queue buffer.
	limit_req_zone global zone=o2omeet_upstream_zone:10M rate=100r/s;

    server {
        # we use port 80 here to work with our docker config but you can configure it to any port you want, just remember to update the dockerfile accordingly
		listen 8080;
		server_name app;

		#buffers
		client_max_body_size 128M;
		client_body_buffer_size 10K;
		client_header_buffer_size 1k;
		
		#timeouts
		keepalive_timeout 300s; #average time o2omeet 5 minutes #client <-> server
		send_timeout 300s; #server -> client
		proxy_connect_timeout 600s; #server <-> upstream
		proxy_send_timeout 600s; #server -> upstream
		proxy_read_timeout 600s; #server <- upstream

		#
		# Allow the server to close the connection after a client stops
		# responding.
		# Frees up socket-associated memory.
		#
		reset_timedout_connection on;
		
		#
		# Sendfile copies data between one FD and other from within the kernel.
		# More efficient than read() + write(), since the requires transferring
		# data to and from the user space.
		#
		sendfile on;

		index index.php index.html;

		#logging
		error_log  /var/log/nginx/error.log;
		access_log /var/log/nginx/access.log;

		root /var/www/public;

		location ~ \.php$ {
			#rate limiting at o2omeet_upstream_zone zone
			limit_req zone=o2omeet_upstream_zone burst=100;
			limit_req_status 429;

			try_files $uri =404;
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_pass 127.0.0.1:9000;
			fastcgi_index index.php;
			
			fastcgi_buffers 8 16k;
    		fastcgi_buffer_size 32k;

			fastcgi_connect_timeout 75s; # Connect timeout nginx -> upstream this timeout cannot usually exceed 75s
			fastcgi_send_timeout 600s;
			fastcgi_read_timeout 600s;

			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
		}

		location / {
			try_files $uri /index.php?$query_string;
				gzip_static on;
		}
	}
}